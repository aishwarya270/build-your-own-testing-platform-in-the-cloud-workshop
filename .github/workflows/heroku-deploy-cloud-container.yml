# This is a basic workflow that is manually triggered to deploy a Docker container image 
# to a Heroku app, specified in the workflow_dispatch inputs.

name: Heroku Deploy Cloud Container

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      heroku_email_address:
        # heroku email
        description: 'Heroku email address'
        # Default value if no value is explicitly provided
        default: ''
        # Input has to be provided for the workflow to run
        required: true
      heroku_api_key:
        # heroku email
        description: 'Heroku API key'
        # Default value if no value is explicitly provided
        default: ''
        # Input has to be provided for the workflow to run
        required: true
      heroku_app_name:
        # heroku email
        description: 'Heroku app name'
        # Default value if no value is explicitly provided
        default: ''
        # Input has to be provided for the workflow to run
        required: true
      container_image:
        # heroku email
        description: 'Container Image Name and Tag'
        # Default value if no value is explicitly provided
        default: 'jamesmortensen/webkitwebdriver-epiphany-cloud:latest'
        # Input has to be provided for the workflow to run
        required: true
        

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    steps:
    - name: Heroku Docker Container Deploy        
      run: |
        echo "::add-mask::$(jq -r '.inputs.heroku_api_key' $GITHUB_EVENT_PATH)"
        echo 'login to the Heroku Container Registry'
        HEROKU_API_KEY=$(jq -r '.inputs.heroku_api_key' $GITHUB_EVENT_PATH) heroku container:login
        echo 'pull the docker container image from Docker Hub'
        docker pull ${{ github.event.inputs.container_image }}
        echo 'tag the image for the Heroku Container Registry'
        docker tag ${{ github.event.inputs.container_image }} registry.heroku.com/${{ github.event.inputs.heroku_app_name }}/web:latest
        echo 'push the container image to the Heroku Container Registry'
        docker push registry.heroku.com/${{ github.event.inputs.heroku_app_name }}/web:latest
        echo 'release the container to the Heroku app'
        HEROKU_API_KEY=$(jq -r '.inputs.heroku_api_key' $GITHUB_EVENT_PATH) heroku container:release web -a ${{ github.event.inputs.heroku_app_name }}
        docker logout
        heroku container:logout
        cat /home/runner/.docker/config.json
        
